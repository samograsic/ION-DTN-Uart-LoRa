diff --git a/ltp/udp/libudplsa.c b/ltp/udp/libudplsa.c
index 9d57b816..3d791ecb 100644
--- a/ltp/udp/libudplsa.c
+++ b/ltp/udp/libudplsa.c
@@ -31,6 +31,7 @@ void	*udplsa_handle_datagrams(void *parm)
 
 	/*	Initialize recvmmsg buffers.				*/
 
+writeMemo("udplsa_handle_datagrams is UDP_MULTISEND.");
 	buffers = MTAKE((UDPLSA_BUFSZ + 1)* MULTIRECV_BUFFER_COUNT);
 	if (buffers == NULL)
 	{
@@ -146,6 +147,7 @@ void	*udplsa_handle_datagrams(void *parm)
 		switch (segmentLength)
 		{
 		case 0:	/*	Interrupted system call.		*/
+writeMemo("libudplsa irecvfrom is interrupted");
 			continue;
 
 		case -1:
@@ -155,6 +157,7 @@ void	*udplsa_handle_datagrams(void *parm)
 			/*	Intentional fall-through to next case.	*/
 
 		case 1:				/*	Normal stop.	*/
+writeMemo("libudplsa irecvfrom() receives STOP byte");
 			rtp->running = 0;
 			continue;
 		}
diff --git a/ltp/udp/udplsi.c b/ltp/udp/udplsi.c
index 0ed2fa4a..dc1bec7d 100644
--- a/ltp/udp/udplsi.c
+++ b/ltp/udp/udplsi.c
@@ -151,15 +151,21 @@ int	main(int argc, char *argv[])
 	fd = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);
 	if (fd >= 0)
 	{
+#if 0
 		if (isendto(fd, &quit, 1, 0, &ownSockName,
 				sizeof(struct sockaddr)) == 1)
 		{
 			pthread_join(receiverThread, NULL);
 		}
+#endif
 
+oK(isendto(fd, &quit, 1, 0, &ownSockName,
+		sizeof(struct sockaddr)));
+microsnooze(10000);
 		closesocket(fd);
 	}
 
+pthread_detach(receiverThread);
 	closesocket(rtp.linkSocket);
 	writeErrmsgMemos();
 	writeMemo("[i] udplsi has ended.");
diff --git a/ltp/udp/udplso.c b/ltp/udp/udplso.c
index e1d46aef..53341c82 100644
--- a/ltp/udp/udplso.c
+++ b/ltp/udp/udplso.c
@@ -586,15 +586,21 @@ segment batch.", NULL);
 	fd = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);
 	if (fd >= 0)
 	{
+#if 0
 		if (isendto(fd, &quit, 1, 0, &ownSockName,
 				sizeof(struct sockaddr)) == 1)
 		{
 			pthread_join(receiverThread, NULL);
 		}
+#endif
 
+oK(isendto(fd, &quit, 1, 0, &ownSockName,
+		sizeof(struct sockaddr)));
+microsnooze(10000);
 		closesocket(fd);
 	}
 
+pthread_detach(receiverThread);
 	closesocket(rtp.linkSocket);
 	writeErrmsgMemos();
 	writeMemo("[i] udplso has ended.");
