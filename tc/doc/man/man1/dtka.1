.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DTKA 1"
.TH DTKA 1 "2021-10-25" "perl v5.26.2" "TC executables"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dtka \- Delay\-Tolerant Key Administration (DTKA) daemon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdtka\fR \fIpassword_file_path_name\fR
.PP
\&\fBdtka\fR is a delay-tolerant public key infrastructure (\s-1PKI\s0) system, built
on the Trusted Collective (\s-1TC\s0) application framework.  Each \s-1DTKA\s0 daemon
generates public/private key pairs and uses the \s-1TC\s0 framework to distribute
public keys securely and to receive the public keys generated and distributed
by other \s-1DTKA\s0 daemons.  For an overview of \s-1TC,\s0 see the \fItc\fR\|(3) manual page.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DTKA\s0 system provides a trustworthy mechanism for delay-tolerant
distribution of public keys, enabling \s-1ION\s0's \s-1BP\s0 and \s-1LTP\s0 implementations
to utilize asymmetric cryptography to ensure the integrity and/or
confidentiality of data exchange as necessary.  (Discussion of asymmetric
cryptography is beyond the scope of this manual page.)
.PP
\&\fIpassword_file_path_name\fR is expected to be the path name for a secure
file, accessible only to the owner of the \fBdtka\fR executable, which
contains the passphrase that dtka can use to store locally \*(-- in encrypted
representation \*(-- the private keys it generates.
.PP
A central principle of \s-1DTKA\s0 is that keys have \fBeffective times\fR which
condition their applicability.  For example, the public key that must
be used to encrypt a bundle payload destined for a given node is the
public key (asserted by that node) whose associated effective time is
greatest among all of that node's public keys whose associated effective
times are less than or equal to the creation time of the bundle.  Effective
times enable keys to be distributed far in advance of the times at which
they will be used, which is what makes \s-1DTKA\s0 delay-tolerant: when the time
arrives at which a node needs a given key, the key is already in place.
.PP
The \fBdtka\fR daemon is responsible for periodically generating, on behalf
of a given \s-1DTN\s0 node, public/private key pairs that will be effective at
times in the future.
.PP
The first public key generated by a given \s-1DTN\s0 node's \fBdtka\fR daemon is
distributed by means of an application-specific \s-1DTKA\s0 initialization
procedure.  The procedure may be an out-of-band mechanism by which
the initializing node's public key is generated and submitted to
the \s-1DTKA\s0 \fBauthority\fR while the user node is under the physical
control of the \s-1DTKA\s0 authority's administrator.  Alternatively, the
initializing node's public key may be submitted to the \s-1DTKA\s0 authority
by some other \s-1DTN\s0 node whose \fBdtka\fR daemon is known to the \s-1DTKA\s0
authority and is trusted, in which case that node utilizes the \s-1TC\s0
framework on behalf of the initializing node.
.PP
Each subsequently generated public key is signed in the node's applicable
private key and is submitted directly to the \s-1DTKA\s0 authority by means of
the \s-1TC\s0 framework.
.PP
Public key revocations, generated by the \s-1DTKA\s0 authority's administrator,
are submitted in the same way as assertions of new public keys.
.PP
\&\fB\s-1NOTE\s0\fR that dtka utilizes functions provided by cryptography software
that is not distributed with \s-1ION.\s0  To indicate that this supporting software
has been installed, set the compiler flag \-DCRYPTO_SOFTWARE_INSTALLED when
compiling this program.  Absent that flag setting at compile time, the dtka
daemon's \fIgenerateKeyPair()\fR function does nothing.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
.ie n .IP """0""" 4
.el .IP "``0''" 4
.IX Item "0"
\&\fBdtka\fR terminated, for reasons noted in the \fBion.log\fR file.
.ie n .IP """1""" 4
.el .IP "``1''" 4
.IX Item "1"
\&\fBdtka\fR was unable to attach to \s-1TC\s0 client functionality, possibly because
\&\fBtcc\fR is not running.
.SH "FILES"
.IX Header "FILES"
The \fBdtkaadmin\fR utility is used to configure the operation of the dtka daemon;
see the \fIdtkarc\fR\|(5) man page for details.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
No environment variables apply.
.SH "BUGS"
.IX Header "BUGS"
Report bugs to <ion\-dtn\-support@lists.sourceforge.net>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdtkaadmin\fR\|(1), \fIdtkarc\fR\|(5), \fItc\fR\|(3), \fItcc\fR\|(1), \fItccadmin\fR\|(1), \fItccrc\fR\|(5)
