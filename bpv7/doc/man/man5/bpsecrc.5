.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BPSECRC 5"
.TH BPSECRC 5 "2022-10-13" "perl v5.34.0" "BP configuration files"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bpsecrc \- BP security policy management commands file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1BP\s0 security policy management commands are passed to \fBbpsecadmin\fR either
in a file of text lines or interactively at \fBbpsecadmin\fR's command prompt
(:).  Commands are interpreted line-by line, with exactly one command per
line.  \s-1JSON\s0 commands may span multiple lines. The formats and effects of the 
\&\s-1BP\s0 security policy management commands are described below.
.PP
A parameter identifed as an \fIeid_expr\fR is an \*(L"endpoint \s-1ID\s0 expression.\*(R"  For
all commands, whenever the last character of an endpoint \s-1ID\s0 expression is
the wild-card character '*', an applicable endpoint \s-1ID\s0 \*(L"matches\*(R" this \s-1EID\s0
expression if all characters of the endpoint \s-1ID\s0 expression prior to the last
one are equal to the corresponding characters of that endpoint \s-1ID.\s0  Otherwise
an applicable endpoint \s-1ID\s0 \*(L"matches\*(R" the \s-1EID\s0 expression only when all characters
of the \s-1EID\s0 and \s-1EID\s0 expression are identical.
.PP
At present, \s-1ION\s0 supports a subset of the proposed \*(L"BPSec\*(R" security protocol
specification currently under consideration by the Internet Engineering
Steering Group.  Since BPSec is not yet a published standard, \s-1ION\s0's
Bundle Protocol security mechanisms will not necessarily interoperate
with those of other \s-1BP\s0 implementations.  This is unfortunate but (we hope)
temporary, as BPSec represents a major improvement in bundle security.
Future releases of \s-1ION\s0 will implement the entire BPSec specification.
.SH "COMMANDS"
.IX Header "COMMANDS"
.IP "\fB?\fR" 4
.IX Item "?"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fBh\fR command.
.IP "\fB#\fR" 4
.IX Item "#"
Comment line.  Lines beginning with \fB#\fR are not interpreted.
.IP "\fBe\fR { 1 | 0 }" 4
.IX Item "e { 1 | 0 }"
Echo control.  Setting echo to 1 causes all output printed by bpsecadmin to
be logged as well as sent to stdout.  Setting echo to 0 disables this behavior.
.IP "\fBv\fR" 4
.IX Item "v"
Version number.  Prints out the version of \s-1ION\s0 currently installed.  \s-1HINT:\s0
combine with \fBe 1\fR command to log the version number at startup.
.IP "\fBa bibrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR \fI{ '' | ciphersuite_name key_name }\fR" 4
.IX Item "a bibrule source_eid_expr destination_eid_expr block_type_number { '' | ciphersuite_name key_name }"
The \fBadd bibrule\fR command.  This command adds a rule specifying the
manner in which Block Integrity Block (\s-1BIB\s0) validation will be applied
to blocks of type \fIblock_type_number\fR for all bundles sourced at any node
whose administrative endpoint \s-1ID\s0 matches \fIsource_eid_expr\fR and destined for
any node whose administrative endpoint \s-1ID ID\s0 matches \fIdestination_eid_expr\fR.
.Sp
If a zero-length string ('') is indicated instead of a \fIciphersuite_name\fR
then \s-1BIB\s0 validation is disabled for this source/destination \s-1EID\s0 expression
pair: blocks of the type indicated by \fIblock_type_number\fR in all
bundles sourced at nodes with matching administrative endpoint IDs and
destined for nodes with matching administrative endpoint IDs will be
immediately deemed valid.  Otherwise, a block of the indicated type that
is attached to a bundle sourced at a node with matching administrative
endpoint \s-1ID\s0 and destined for a node with matching administrative endpoint
\&\s-1ID\s0 will only be deemed valid if the bundle contains a corresponding \s-1BIB\s0
computed via the ciphersuite named by \fIciphersuite_name\fR using a key
value that is identical to the current value of the key named \fIkey_name\fR
in the local security policy database.
.IP "\fBc bibrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR \fI{ '' | ciphersuite_name key_name }\fR" 4
.IX Item "c bibrule source_eid_expr destination_eid_expr block_type_number { '' | ciphersuite_name key_name }"
The \fBchange bibrule\fR command.  This command changes the ciphersuite
name and/or key name for the \s-1BIB\s0 rule pertaining to the source/destination \s-1EID\s0
expression pair identified by \fIsource_eid_expr\fR and \fIdestination_eid_expr\fR
and the block identified by \fIblock_type_number\fR.
Note that the \fIeid_expr\fRs must exactly match those of the rule that is to
be modified, including any terminating wild-card character.
.IP "\fBd bibrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR" 4
.IX Item "d bibrule source_eid_expr destination_eid_expr block_type_number"
The \fBdelete bibrule\fR command.  This command deletes the \s-1BIB\s0 rule
pertaining to the source/destination \s-1EID\s0 expression pair identified by
\&\fIsender_eid_expr\fR and \fIreceiver_eid_expr\fR and the block identified by
\&\fIblock_type_number\fR.  Note that the \fIeid_expr\fRs
must exactly match those of the rule that is to be deleted, including any
terminating wild-card character.
.IP "\fBi bibrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR" 4
.IX Item "i bibrule source_eid_expr destination_eid_expr block_type_number"
This command will print information (the ciphersuite and key names) about the
\&\s-1BIB\s0 rule pertaining to \fIsource_eid_expr\fR, \fIdestination_eid_expr\fR, and
\&\fIblock_type_number\fR.
.IP "\fBl bibrule\fR" 4
.IX Item "l bibrule"
This command lists all \s-1BIB\s0 rules in the security policy database.
.IP "\fBa bcbrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR \fI{ '' | ciphersuite_name key_name }\fR" 4
.IX Item "a bcbrule source_eid_expr destination_eid_expr block_type_number { '' | ciphersuite_name key_name }"
The \fBadd bcbrule\fR command.  This command adds a rule specifying the
manner in which Block Confidentiality Block (\s-1BCB\s0) encryption will be applied
to blocks of type \fIblock_type_number\fR for all bundles sourced at any node
whose administrative endpoint \s-1ID\s0 matches \fIsource_eid_expr\fR and destined for
any node whose administrative endpoint \s-1ID ID\s0 matches \fIdestination_eid_expr\fR.
.Sp
If a zero-length string ('') is indicated instead of a \fIciphersuite_name\fR
then \s-1BCB\s0 encryption is disabled for this source/destination \s-1EID\s0 expression
pair: blocks of the type indicated by \fIblock_type_number\fR in all
bundles sourced at nodes with matching administrative endpoint IDs and
destined for nodes with matching administrative endpoint IDs will be
sent in plain text.  Otherwise, a block of the indicated type that
is attached to a bundle sourced at a node with matching administrative
endpoint \s-1ID\s0 and destined for a node with matching administrative endpoint
\&\s-1ID\s0 can only be deemed decrypted if the bundle contains a corresponding \s-1BCB\s0
computed via the ciphersuite named by \fIciphersuite_name\fR using a key
value that is identical to the current value of the key named \fIkey_name\fR
in the local security policy database.
.IP "\fBc bcbrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR \fI{ '' | ciphersuite_name key_name }\fR" 4
.IX Item "c bcbrule source_eid_expr destination_eid_expr block_type_number { '' | ciphersuite_name key_name }"
The \fBchange bcbrule\fR command.  This command changes the ciphersuite
name and/or key name for the \s-1BCB\s0 rule pertaining to the source/destination \s-1EID\s0
expression pair identified by \fIsource_eid_expr\fR and \fIdestination_eid_expr\fR
and the block identified by \fIblock_type_number\fR.
Note that the \fIeid_expr\fRs must exactly match those of the rule that is to
be modified, including any terminating wild-card character.
.IP "\fBd bcbrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR" 4
.IX Item "d bcbrule source_eid_expr destination_eid_expr block_type_number"
The \fBdelete bcbrule\fR command.  This command deletes the \s-1BCB\s0 rule
pertaining to the source/destination \s-1EID\s0 expression pair identified by
\&\fIsender_eid_expr\fR and \fIreceiver_eid_expr\fR and the block identified by
\&\fIblock_type_number\fR.  Note that the \fIeid_expr\fRs
must exactly match those of the rule that is to be deleted, including any
terminating wild-card character.
.IP "\fBi bcbrule\fR \fIsource_eid_expr\fR \fIdestination_eid_expr\fR \fIblock_type_number\fR" 4
.IX Item "i bcbrule source_eid_expr destination_eid_expr block_type_number"
This command will print information (the ciphersuite and key names) about the
\&\s-1BCB\s0 rule pertaining to \fIsource_eid_expr\fR, \fIdestination_eid_expr\fR, and
\&\fIblock_type_number\fR.
.IP "\fBl bcbrule\fR" 4
.IX Item "l bcbrule"
This command lists all \s-1BCB\s0 rules in the security policy database.
.IP "\fBx\fR \fI[ { ~ | sender_eid_expr } [ { ~ | receiver_eid_expr} [ { ~ | bib | bcb } ] ] ]\fR" 4
.IX Item "x [ { ~ | sender_eid_expr } [ { ~ | receiver_eid_expr} [ { ~ | bib | bcb } ] ] ]"
This command will clear all rules for the indicated type of bundle security
block between the indicated security source and security destination.  If
block type is omitted it defaults to \fB~\fR signifying \*(L"all BPSec blocks\*(R".  If
both block type and security destination are omitted, security destination
defaults to \fB~\fR signifying \*(L"all \s-1BSP\s0 security destinations\*(R".  If all three
command-line parameters are omitted, then security source defaults to \fB~\fR
signifying \*(L"all BPSec security sources\*(R".
.IP "\fBa\fR \fI{ \f(BIevent_set\fI : { \f(BIname\fI : event set name, \f(BIdesc\fI : (opt) description } }\fR" 4
.IX Item "a { event_set : { name : event set name, desc : (opt) description } }"
The \fBadd event_set\fR command. This command will add a named security operation
event set to the system.
.IP "\fBi\fR \fI{ \f(BIevent_set\fI : { \f(BIname\fI : event set name } }\fR" 4
.IX Item "i { event_set : { name : event set name } }"
The \fBinfo event_set\fR command for event sets displays the information the system maintains 
for a named event set. The security operation events and configured, optional 
processing actions associated with the event set are shown.
.IP "\fBd\fR \fI{ \f(BIevent_set\fI : { \f(BIname\fI : event set name } }\fR" 4
.IX Item "d { event_set : { name : event set name } }"
The \fBdelete event_set\fR command deletes a named event set from the system. 
A named event set cannot be deleted if it is referenced by a security policy 
rule. All security policy rules associated with the named event set must be deleted 
before the event set itself may be deleted.
.IP "\fBl\fR \fI{\f(BItype\fI : \f(BIevent_set\fI}\fR" 4
.IX Item "l {type : event_set}"
The \fBlist event_set\fR command lists the names of all event sets defined in the 
system.
.IP "\fBa\fR \fI{ \f(BIevent\fI : { \fR \fI\f(BIes_ref\fI : event set name,\fR \fI\f(BIevent_id\fI : security operation event \s-1ID\s0\fR \fI\f(BIactions\fI : [ opt. processing action, ... , opt. processing action ],\fR \fI\f(BIaction_parms\fI : [ { \f(BIid\fI: parm \s-1ID,\s0 \f(BIvalue\fI: parm value }, ... , { \f(BIid\fI: parm \s-1ID,\s0 \f(BIvalue\fI: parm value } ] } }\fR" 4
.IX Item "a { event : { es_ref : event set name, event_id : security operation event ID actions : [ opt. processing action, ... , opt. processing action ], action_parms : [ { id: parm ID, value: parm value }, ... , { id: parm ID, value: parm value } ] } }"
The \fBadd event\fR command adds security operation event and associated optional 
processing action(s) to an event set. Multiple processing actions can be specified 
for a single security operation event.
.IP "\fBd\fR \fI { \f(BIevent\fI : { \fR \fI\f(BIes_ref\fI : event set name,\fR \fI\f(BIevent_id\fI : security operation event \s-1ID\s0\fR \fI\f(BIactions\fI : [ opt. processing action, ... , opt. processing action ] } }\fR" 4
.IX Item "d { event : { es_ref : event set name, event_id : security operation event ID actions : [ opt. processing action, ... , opt. processing action ] } }"
The \fBdelete event\fR command is used to delete optional processing actions from a
named event set. To remove specific processing actions, include both the security 
operation event and optional processing actions to be removed in the command. 
To remove all processing actions for a security operation event, exclude the 
optional processing action field.
.IP "\fBa\fR \fI{ \f(BIpolicyrule\fI : {\fR \fI\f(BIdesc\fI : description,\fR \fI\f(BIfilter\fI :\fR \fI{\fR \fI\f(BIrule_id\fI : Security policy rule id, \f(BIrole\fI : Security policy role, \f(BIsrc\fI : Bundle source, \f(BIdest\fI : Bundle destination \f(BIsec_src\fI : Security source \f(BItgt\fI : Security target block type, \f(BIscid\fI : Security context \s-1ID,\s0 },\fR \fI\f(BIspec\fI : { \f(BIsvc\fI : Security service, \f(BIscid\fI : Security context \s-1ID,\s0 \f(BIsc_parms\fI : [ { \f(BIid\fI: \s-1SC\s0 parm \s-1ID,\s0 \f(BIvalue\fI: \s-1SC\s0 parm value }, ... , { \f(BIid\fI: \s-1SC\s0 parm \s-1ID,\s0 \f(BIvalue\fI: \s-1SC\s0 parm value } ] }, \f(BIes_ref\fI : Event set name } } \fR" 4
.IX Item "a { policyrule : { desc : description, filter : { rule_id : Security policy rule id, role : Security policy role, src : Bundle source, dest : Bundle destination sec_src : Security source tgt : Security target block type, scid : Security context ID, }, spec : { svc : Security service, scid : Security context ID, sc_parms : [ { id: SC parm ID, value: SC parm value }, ... , { id: SC parm ID, value: SC parm value } ] }, es_ref : Event set name } } "
The \fBadd policyrule\fR command adds a policy rule to the system, describing a 
required security operation and the security policy role of the \s-1BPA\s0 applying 
the policy statement. The above command adds a policy rule referencing a 
named event set to the system.
.IP "\fBd\fR \fI{ \f(BIpolicyrule\fI : { \f(BIrule_id\fI : Security policy rule \s-1ID\s0 } }\fR" 4
.IX Item "d { policyrule : { rule_id : Security policy rule ID } }"
The \fBdelete policyrule\fR command deletes the policy rule identified by its
rule \s-1ID.\s0
.IP "\fBi\fR \fI{\f(BIpolicyrule\fI : Security policy rule id }\fR" 4
.IX Item "i {policyrule : Security policy rule id }"
The \fBinfo policyrule\fR command displays the information for the
policy rule matching the provided \s-1ID.\s0
.IP "\fBf\fR \fI{\f(BIpolicyrule\fI : { \f(BItype\fI : \f(BIall | best\fI, \f(BIsrc\fI : Bundle source, \f(BIdest\fI : Bundle destination, \f(BIssrc\fI : Security source, \f(BIscid\fI : Security context \s-1ID,\s0 \f(BIrole\fI : Security policy role } }\fR" 4
.IX Item "f {policyrule : { type : all | best, src : Bundle source, dest : Bundle destination, ssrc : Security source, scid : Security context ID, role : Security policy role } }"
The \fBfind policyrule\fR command finds all policy rules matching the provided criteria 
when type \fBall\fR is selected, and finds the single policy rule that is determined to be 
the best match when type \fBbest\fR is selected.
.IP "\fBl\fR \fI{\f(BItype\fI : \f(BIpolicyrule\fI}\fR" 4
.IX Item "l {type : policyrule}"
The \fBlist policyrule\fR command lists all policy rules currently 
defined in the system.
.IP "\fBh\fR" 4
.IX Item "h"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fB?\fR command.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBbpsecadmin\fR\|(1)
