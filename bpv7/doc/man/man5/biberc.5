.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BIBERC 5"
.TH BIBERC 5 "2022-10-13" "perl v5.34.0" "BP configuration files"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
biberc \- BIBE configuration commands file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1BIBE\s0 configuration commands are passed to \fBbibeadmin\fR either in a file of
text lines or interactively at \fBbibeadmin\fR's command prompt (:).  Commands
are interpreted line-by line, with exactly one command per line.
.PP
\&\s-1BIBE\s0 configuration commands establish the parameters governing transmission
of \s-1BIBE\s0 PDUs to specified \fBpeer\fR nodes: anticipated delivery latency in the
forward direction, anticipated delivery latency in the return direction,
\&\s-1TTL\s0 for \s-1BIBE\s0 PDUs, priority for \s-1BIBE\s0 PDUs, ordinal priority for \s-1BIBE\s0 PDUs
in the event that priority is Expedited, and (optionally) data label for
\&\s-1BIBE\s0 PDUs.  As such, they configure \s-1BIBE\s0 convergence-layer adapter (\fBbcla\fR)
structures.
.PP
The formats and effects of the \s-1BIBE\s0 configuration commands are described below.
.PP
\&\s-1NOTE:\s0 in order to cause bundles to be transmitted via \s-1BIBE:\s0
.IP "\fBPlan\fR" 4
.IX Item "Plan"
Remember that \s-1BIBE\s0 is a convergence-layer protocol; as such, it operates
between two nodes that are topologically adjacent in a \s-1BP\s0 network (but in
this case the \s-1BP\s0 network within which the nodes are topologically adjacent
is an overlay on top of the real \s-1BP\s0 network).  Since the sending and
receiving nodes are topologically adjacent they are neighbors: the sending
node \s-1MUST\s0 have an egress plan for transmission to the receiving (that is,
\&\fBpeer\fR) node, and there \s-1MUST\s0 be a \s-1BIBE\s0 outduct attached to that plan.
.IP "\fBRouting\fR" 4
.IX Item "Routing"
In order to compel bundles bound for some destination node to be forwarded
via the \s-1BIBE\s0 peer node rather than over some other route computed by \s-1CGR,\s0
you have to override \s-1CGR\s0 routing for that bundle.  The way to do this is
to (a) tag the bundle with data label X (in ancillary data) and (b) use
ipnadmin to establish at the sending node a \fIrouting override\fR that
coerces all bundles with data label X to be sent directly to the peer node.
.Sp
If the peer node happens to be a true \s-1BP\s0 neighbor as well \- that is,
there is also a non-BIBE outduct attached to the egress plan for
transmission to that node \- then you additionally need to tell the
egress plan management daemon (bpclm) for that node which bundles
need to be forwarded using the \s-1BIBE\s0 outduct rather than the non-BIBE
outduct.  The way to do this is to use ipnadmin to establish at the
sending node a \fIclass-of-service override\fR that locally and temporarily
\&\s-1OR\s0's the \s-1BP_BIBE_REQUESTED\s0 flag (32) to the quality-of-service flags
of any bundle tagged with data label X.
.IP "\fBQuality of Service\fR" 4
.IX Item "Quality of Service"
If you want custody transfer to be invoked for each \s-1BIBE\s0 transmission of a
bundle from the sending node to the peer node, you must additionally
use ipnadmin to establish at the sending node a \fIclass-of-service override\fR
that locally and temporarily \s-1OR\s0's the \s-1BP_CT_REQUESTED\s0 flag (64) to the
quality-of-service flags of any bundle tagged with data label X.
.Sp
If you need to establish a class-of-service override to set the
\&\s-1BP_BIBE_REQUESTED\s0 flag (as described above) as well, then use the
\&\s-1OR\s0 of \s-1BP_BIBE_REQUESTED\s0 and \s-1BP_CT_REQUESTED\s0 \- that is, 96 \- as the
quality-of-service flags argument for that override.
.Sp
\&\fB\s-1NOTE\s0\fR that an alternative method of setting both the \s-1BP_BIBE_REQUESTED\s0
and \s-1BP_CT_REQUESTED\s0 flags for a given bundle is simply to request custody
transfer when the bundle is sourced; this will \s-1OR\s0 that bundle's own
quality-of-service flags (in ancillary data) with 96.  But be careful:
in this case the bundle will be permanently tagged with these flag values,
meaning that it will be forwarded via \s-1BIBE\s0 with custody transfer over
every \*(L"hop\*(R" of the end-to-end path to its destination, and if \s-1BIBE\s0 is
unavailable at any forwarding node on the path then the bundle can
never reach the destination node.
.SH "GENERAL COMMANDS"
.IX Header "GENERAL COMMANDS"
.IP "\fB?\fR" 4
.IX Item "?"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fBh\fR command.
.IP "\fB#\fR" 4
.IX Item "#"
Comment line.  Lines beginning with \fB#\fR are not interpreted.
.IP "\fBe\fR { 1 | 0 }" 4
.IX Item "e { 1 | 0 }"
Echo control.  Setting echo to 1 causes all output printed by bibeadmin to be
logged as well as sent to stdout.  Setting echo to 0 disables this behavior.
.IP "\fBw\fR { 0 | 1 | \fIactivity_spec\fR }" 4
.IX Item "w { 0 | 1 | activity_spec }"
The \fBwatch\fR command.  This command enables and disables production of a
continuous stream of user-selected Bundle-in-Bundle Encapsulation
custody transfer activity indication characters.  A watch parameter of \*(L"1\*(R"
selects all BIBE-CT activity indication characters; \*(L"0\*(R" de-selects all
BIBE-CT activity indication characters; any other \fIactivity_spec\fR such
as \*(L"mw\*(R" selects all activity indicators in the string, de-selecting all
others.  \s-1BIBE\s0 will print each selected activity indication character to
\&\fBstdout\fR every time a processing event of the associated type occurs:
.Sp
\&\fBw\fR	custody of bundle is accepted
.Sp
\&\fBm\fR	custody acceptance is received for one bundle
.Sp
\&\fBx\fR	custody of bundle is refused
.Sp
\&\fB&\fR	custody refusal is received for one bundle
.Sp
\&\fB$\fR	bundle retransmitted due to expired custodial retransmission interval
.IP "\fBh\fR" 4
.IX Item "h"
The \fBhelp\fR command.  This will display a listing of the commands and their
formats.  It is the same as the \fB?\fR command.
.SH "BCLA COMMANDS"
.IX Header "BCLA COMMANDS"
.IP "\fBa\fR bcla \fIpeer_EID\fR \fIfwd_latency\fR \fIrtn_latency\fR \fItime_to_live\fR \fIpriority\fR \fIordinal\fR [\fIdata label\fR]" 4
.IX Item "a bcla peer_EID fwd_latency rtn_latency time_to_live priority ordinal [data label]"
The \fBadd bcla\fR command.  This command adds the neighboring node identified
by \fIpeer_EID\fR as a \s-1BIBE\s0 destination of the local node.
.IP "\fBc\fR bcla \fIpeer_EID\fR \fIfwd_latency\fR \fIrtn_latency\fR \fItime_to_live\fR \fIpriority\fR \fIordinal\fR [\fIdata label\fR]" 4
.IX Item "c bcla peer_EID fwd_latency rtn_latency time_to_live priority ordinal [data label]"
The \fBchange bcla\fR command.  This command changes the transmission parameters
governing \s-1BIBE PDU\s0 transmission to the indicated peer node.
.IP "\fBd\fR bcla \fIpeer_EID\fR" 4
.IX Item "d bcla peer_EID"
The \fBdelete bcla\fR command.  This command deletes the \fBbcla\fR identified by
\&\fIpeer_EID\fR.
.IP "\fBi\fR bcla \fIpeer_EID\fR" 4
.IX Item "i bcla peer_EID"
This command will print information (the transmission parameters) for the
\&\s-1BIBE\s0 peer node identified by \fIpeer_EID\fR.
.IP "\fBl\fR" 4
.IX Item "l"
This command lists all of the local node's \s-1BIBE\s0 peers.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "a bcla ipn:3.2 10 10 60 1 0 16" 4
.IX Item "a bcla ipn:3.2 10 10 60 1 0 16"
Declares that ipn:3.2 is a \s-1BIBE\s0 destination and that \s-1BIBE\s0 PDUs destined for
this node are to be sent with \s-1TTL 60\s0 seconds, priority 1 (standard), and data
label 16; it is expected that \s-1BIBE\s0 PDUs sent to this node will arrive within
10 seconds and that \s-1BIBE\s0 PDUs sent from this node will arrive within 10 seconds.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBbibeadmin\fR\|(1), \fBbibeclo\fR\|(1)
